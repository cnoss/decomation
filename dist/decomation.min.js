const root=document.documentElement,styles=getComputedStyle(root),kmBlau=styles.getPropertyValue("--km-blau")?.trim()||"#4ecdc4",kmOrange=styles.getPropertyValue("--km-pink")?.trim()||"#ff6b6b",kmGray=styles.getPropertyValue("--dark")?.trim()||"#666",stageBackgroundColor=styles.getPropertyValue("--stage-background-color")?.trim()||"transparent";function getOffsetTopViewport(t){return t.getBoundingClientRect().top-t.getBoundingClientRect().height/2}class CanvasManager{constructor(t,i={}){this.container="string"==typeof t?document.getElementById(t):t,this.elements=[],this.elementId=0,this.isRunning=!0,this.config={width:i.width||Math.min(window.innerWidth/2,600),height:i.height||Math.min(window.innerWidth/2,600),minItems:i.minItems||6,maxItems:i.maxItems||12,type:i.type||"dots",size:i.size||"auto",nodes:i.nodes||5,colors:i.colors||[kmBlau,kmOrange,kmGray],brake:i.brake||5,...i},this.initStage(),this.createElements(),this.setupScrollHandler(),this.startAnimationLoop()}initStage(){this.stage=new Konva.Stage({container:this.container,width:this.config.width,height:this.config.height,background:stageBackgroundColor}),this.layer=new Konva.Layer,this.stage.add(this.layer)}createElements(){const t=Math.floor(gsap.utils.random(this.config.minItems,this.config.maxItems)),i=3*t,e="lines"===this.config.type?i:t,s=this.stage.width()/e,r=Math.floor(s),n=s-r,o="auto"===this.config.size?r/2.2:this.config.size,a="auto"===this.config.size?r:this.config.size,h=n/2+r/2,l=n/2+r/2,c=new Konva.Rect({x:0,y:0,width:this.stage.width(),height:2*this.stage.height(),fill:stageBackgroundColor,opacity:.5,listening:!1});this.layer.add(c);for(let t=0;t<e;t++)for(let i=0;i<e;i++){const e=h+i*r,s=l+t*r;if("squares"===this.config.type){const t=new SquareElement(e,s,a,this.config.colors,this.layer);this.elements.push(t)}else if("lines"===this.config.type){const t=new LineElement(e,s,a,this.config.colors,this.layer,this.config.strokeWeight,this.config.brake);this.elements.push(t)}else if("polygons"===this.config.type){const t=new PolygonElement(e,s,o,this.config.colors,this.layer,this.config.nodes,this.config.strokeWeight);this.elements.push(t)}else{const t=new CircleElement(e,s,o,this.config.colors,this.layer,this.config.brake);this.elements.push(t)}}this.updateElementPositions(),this.layer.draw()}updateElementPositions(){const t=window.scrollY,i=getOffsetTopViewport(this.container);this.elements.forEach(e=>{e.changePosition(t,i,this.stage)})}startAnimationLoop(){const t=()=>{this.isRunning&&(this.elements.forEach(t=>{t.update&&t.update()}),this.layer.batchDraw(),requestAnimationFrame(t))};t()}setupScrollHandler(){let t=!1;const i=()=>{t||(requestAnimationFrame(()=>{this.updateElementPositions(),t=!1}),t=!0)};window.addEventListener("scroll",i),this.destroy=()=>{this.isRunning=!1,window.removeEventListener("scroll",i),this.stage.destroy()}}resize(){const t=this.container.offsetWidth||this.config.width,i=this.container.offsetHeight||this.config.height;this.stage.width(t),this.stage.height(i),this.config.width=t,this.config.height=i,this.elements.forEach(t=>t.destroy()),this.elements=[],this.layer.destroyChildren(),this.createElements()}}class CircleElement{constructor(t,i,e=20,s=[kmBlau,kmOrange,kmGray],r,n=5){this.originalX=t,this.originalY=i,this.radius=e,this.layer=r,this.color=this.getRandomColor(s),this.brake=n,this.randomX=gsap.utils.random(-100-this.originalX,100+this.originalX)/100,this.randomY=gsap.utils.random(-100-this.originalY,100+this.originalY)/100,this.currentX=t,this.currentY=i,this.targetX=t,this.targetY=i,this.lerpFactor=.03,this.createCircle(),this.addInteractivity()}createCircle(){this.circle=new Konva.Circle({x:this.originalX,y:this.originalY,radius:this.radius,fill:this.color,opacity:gsap.utils.random(.8,1)}),this.layer.add(this.circle)}addInteractivity(){this.circle.on("mouseenter",()=>{document.body.style.cursor="pointer",this.circle.strokeWidth(4)}),this.circle.on("mouseleave",()=>{document.body.style.cursor="default",this.circle.strokeWidth(2)})}changePosition(t,i,e){const s=i>0?i:0,r=gsap.utils.mapRange(0,window.innerHeight*this.brake,0,e.height(),s);this.targetY=this.originalY+r*this.randomY,this.targetX=this.originalX+r*this.randomX}update(){this.currentX+=(this.targetX-this.currentX)*this.lerpFactor,this.currentY+=(this.targetY-this.currentY)*this.lerpFactor,this.circle.x(this.currentX),this.circle.y(this.currentY)}getRandomColor(t){return t[Math.floor(Math.random()*t.length)]}destroy(){this.circle.destroy()}}class SquareElement{constructor(t,i,e=20,s=[kmBlau,kmOrange,kmGray],r){this.originalX=t,this.originalY=i,this.size=e,this.layer=r,this.color=this.getRandomColor(s),this.randomX=gsap.utils.random(-100-this.originalX,100+this.originalX)/100,this.randomY=gsap.utils.random(-100-this.originalY,100+this.originalY)/100,this.currentX=t,this.currentWidth=e,this.targetX=t,this.targetWidth=e,this.lerpFactor=.06,this.createSquare(),this.addInteractivity()}createSquare(){this.square=new Konva.Rect({x:this.originalX-this.size/2,y:this.originalY-this.size/2,width:this.size,height:this.size,fill:this.color,opacity:gsap.utils.random(.4,1)}),this.layer.add(this.square)}addInteractivity(){this.square.on("mouseenter",()=>{document.body.style.cursor="pointer",this.square.strokeWidth(4)}),this.square.on("mouseleave",()=>{document.body.style.cursor="default",this.square.strokeWidth(2)})}changePosition(t,i,e){const s=i>0?i:0,r=gsap.utils.mapRange(0,window.innerHeight,0,e.height(),s);this.targetWidth=gsap.utils.mapRange(0,window.innerHeight,0,this.size,t),this.targetX=this.originalX+r*this.randomX}update(){this.currentX+=(this.targetX-this.currentX)*this.lerpFactor,this.currentWidth+=(this.targetWidth-this.currentWidth)*this.lerpFactor,this.square.x(this.currentX),this.square.width(this.currentWidth)}getRandomColor(t){return t[Math.floor(Math.random()*t.length)]}destroy(){this.square.destroy()}}class LineElement{constructor(t,i,e=20,s=[kmBlau,kmOrange,kmGray],r,n=3,o=5){this.originalX=t,this.originalY=i,this.size=e,this.layer=r,this.color=this.getRandomColor(s),this.strokeWeight=n,this.brake=o,this.randomX=gsap.utils.random(-100-this.originalX,100+this.originalX)/100,this.randomY=gsap.utils.random(-100-this.originalY,100+this.originalY)/100,this.currentX=t,this.currentY=i,this.currentRotation=0,this.currentLineLength=e,this.targetX=t,this.targetY=i,this.targetRotation=0,this.targetLineLength=e,this.lerpFactor=.07,this.createLine(),this.addInteractivity()}createLine(){this.line=new Konva.Line({points:[this.originalX,this.originalY,this.originalX,this.originalY+this.size],stroke:this.color,strokeWidth:this.strokeWeight,offsetX:this.size/2,offsetY:this.size/2,opacity:gsap.utils.random(.4,1)}),this.layer.add(this.line)}addInteractivity(){this.line.on("mouseenter",()=>{document.body.style.cursor="pointer",this.line.strokeWidth(4)}),this.line.on("mouseleave",()=>{document.body.style.cursor="default",this.line.strokeWidth(2)})}changePosition(t,i,e){const s=i>0?i:0,r=gsap.utils.mapRange(0,window.innerHeight,0,e.height(),s);this.targetX=this.originalX+r*this.randomX,this.targetY=this.originalY+r*this.randomY,this.targetRotation=gsap.utils.mapRange(0,window.innerHeight,0,360/this.brake,s),this.targetLineLength=this.size+r}update(){this.currentX+=(this.targetX-this.currentX)*this.lerpFactor,this.currentY+=(this.targetY-this.currentY)*this.lerpFactor,this.currentRotation+=(this.targetRotation-this.currentRotation)*this.lerpFactor,this.currentLineLength+=(this.targetLineLength-this.currentLineLength)*this.lerpFactor,this.line.rotation(this.currentRotation),this.line.points([this.currentX,this.currentY,this.currentX,this.currentY+this.currentLineLength])}getRandomColor(t){return t[Math.floor(Math.random()*t.length)]}destroy(){this.line.destroy()}}class PolygonElement{constructor(t,i,e=20,s=[kmBlau,kmOrange,kmGray],r,n=5,o=2){this.originalX=t,this.originalY=i,this.size=e,this.layer=r,this.nodes=n,this.strokeWeight=o,this.color=this.getRandomColor(s),this.randomX=gsap.utils.random(-100-this.originalX,100+this.originalX)/100,this.randomY=gsap.utils.random(-100-this.originalY,100+this.originalY)/100,this.currentX=t,this.currentRotation=0,this.currentScale=1,this.targetX=t,this.targetRotation=0,this.targetScale=1,this.lerpFactor=.05,this.createPolygon(),this.addInteractivity()}createPolygon(){const t=this.nodes,i=this.size/2,e=[];for(let s=0;s<t;s++){const r=s/t*Math.PI*2,n=this.originalX+Math.cos(r)*i,o=this.originalY+Math.sin(r)*i;e.push(n,o)}this.polygon=new Konva.Line({points:e,stroke:this.color,strokeWidth:this.strokeWeight,closed:!0,opacity:gsap.utils.random(.4,1)}),this.layer.add(this.polygon)}addInteractivity(){this.polygon.on("mouseenter",()=>{document.body.style.cursor="pointer",this.polygon.strokeWidth(4)}),this.polygon.on("mouseleave",()=>{document.body.style.cursor="default",this.polygon.strokeWidth(2)})}changePosition(t,i,e){const s=i>0?i:0,r=gsap.utils.mapRange(0,window.innerHeight,0,e.height(),s);this.targetScale=gsap.utils.mapRange(0,window.innerHeight,0,1,t),this.targetX=this.originalX+r*this.randomX,this.targetRotation=gsap.utils.mapRange(0,window.innerHeight,0,40,s)}update(){this.currentX+=(this.targetX-this.currentX)*this.lerpFactor,this.currentRotation+=(this.targetRotation-this.currentRotation)*this.lerpFactor,this.currentScale+=(this.targetScale-this.currentScale)*this.lerpFactor,this.polygon.x(this.currentX),this.polygon.rotation(this.currentRotation),this.polygon.scaleX(this.currentScale),this.polygon.scaleY(this.currentScale),this.polygon.offsetX(this.size/2),this.polygon.offsetY(this.size/2)}getRandomColor(t){return t[Math.floor(Math.random()*t.length)]}destroy(){this.polygon.destroy()}}const kmIlluCanvasManagers=[];function createCanvas(t,i={}){const e=new CanvasManager(t,i);return kmIlluCanvasManagers.push(e),e}const kmIlluCanvasElements=document.querySelectorAll("[data-js-kic-type]");let resizeTimeout;kmIlluCanvasElements.forEach(t=>{const i=t.getAttribute("data-js-kic-type")||"dots",e=parseInt(t.getAttribute("data-js-kic-min"),10)||6,s=parseInt(t.getAttribute("data-js-kic-max"),10)||12,r=t.offsetWidth||600,n=t.offsetHeight||400,o=parseInt(t.getAttribute("data-js-kic-nodes"),10)||5,a=parseInt(t.getAttribute("data-js-kic-size"),10)||"auto",h=parseInt(t.getAttribute("data-js-kic-strokeweight"),10)||2,l=parseFloat(t.getAttribute("data-js-kic-brake"))||5;t.id=t.id||`canvas-${kmIlluCanvasManagers.length+1}`,createCanvas(t.id,{container:t.id,width:r,height:n,minItems:e,maxItems:s,size:a,type:i,nodes:o,strokeWeight:h,brake:l})}),window.addEventListener("resize",()=>{clearTimeout(resizeTimeout),resizeTimeout=setTimeout(()=>{kmIlluCanvasManagers.forEach(t=>{t&&"function"==typeof t.resize&&t.resize()})},150)});